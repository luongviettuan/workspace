name: backend-cd
on:
  workflow_dispatch:
  push:
    branches:
      - main
  
env:
  # Set Python Version
  PYTHON_VERSION: '3.10'
  AWS_REGION: us-east-1
  REPO_NAME: backend-service
  IMAGE_TAG: ${GITHUB_SHA::7}

jobs:
  backend-lint:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Use Python '3.10' from env
      uses: actions/setup-python@v5
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Install Dependency
      working-directory: starter/backend
      run: |
        pip install pipenv
        pip install flake8
        pipenv install

    - name: Lint
      working-directory: starter/backend
      run: pipenv run lint

  backend-test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Use Python '3.10' from env
      uses: actions/setup-python@v5
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Install Dependency
      working-directory: starter/backend
      run: |
        pip install pipenv
        pip install flake8
        pipenv install

    - name: Test
      working-directory: starter/backend
      run: pipenv run test

  backend-deployment:
      runs-on: ubuntu-latest
      needs: [backend-lint, backend-test]

      steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: ${{env.AWS_REGION}}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
          
      - name: Build and Push Docker Image To ECR
        working-directory: starter/backend
        run: |
          docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag ${{secrets.AWS_USER_ID}}.dkr.ecr.us-east-1.amazonaws.com/${{env.REPO_NAME}}:${{env.IMAGE_TAG}} .
          docker push ${{secrets.AWS_USER_ID}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com/${{env.REPO_NAME}}:${{env.IMAGE_TAG}}

      - name: Configure Kubeconfig
        run: aws eks update-kubeconfig --name ${{env.REPO_NAME}} --region ${{env.AWS_REGION}}

      - name: Deploy Docker Image to Amazon EKS
        working-directory: starter/backend/k8s
        run: |
            kustomize edit set image backend=${{secrets.AWS_USER_ID}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com/${{env.REPO_NAME}}:${{env.IMAGE_TAG}}
            kustomize build | kubectl apply -f -
    