name: frontend-cd
on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  NODE_VERSION: '18.x'
  AWS_REGION: us-east-1
  REPO_NAME: frontend-service

jobs:
  frontend-lint:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Use Node.js '18.x' from env
      uses: actions/setup-node@v3
      with:
        node-version: ${{env.NODE_VERSION}}
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: Install Dependency
      working-directory: starter/frontend
      run: npm ci
      
    - name: Lint
      working-directory: starter/frontend
      run: npm run lint -- --fix
  

  frontend-test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Use Node.js '18.x' from env
      uses: actions/setup-node@v3
      with:
        node-version: ${{env.NODE_VERSION}}
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: Install Dependency
      working-directory: starter/frontend
      run: npm ci
      
    - name: Test
      working-directory: starter/frontend
      run: npm run test --passWithNoTests
  
  frontend-deployment:
    runs-on: ubuntu-latest
    needs: [frontend-lint, frontend-test]
    steps:
    
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
        aws-region: ${{env.AWS_REGION}}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
        
    - name: Build and Push Docker Image To ECR
      working-directory: starter/frontend
      run: |
        docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag ${{secrets.AWS_USER_ID}}.dkr.ecr.us-east-1.amazonaws.com/${{env.REPO_NAME}}:latest .
        docker push ${{secrets.AWS_USER_ID}}.dkr.ecr.us-east-1.amazonaws.com/${{env.REPO_NAME}}:latest

    - name: Configure Kubeconfig
      run: aws eks update-kubeconfig --name ${{env.REPO_NAME}} --region ${{env.AWS_REGION}}

    - name: Deploy Docker Image to Amazon EKS
      working-directory: starter/frontend/k8s
      run: |
          kustomize edit set image frontend=${{secrets.AWS_USER_ID}}.dkr.ecr.us-east-1.amazonaws.com/${{env.REPO_NAME}}:latest
          kustomize build | kubectl apply -f -
          